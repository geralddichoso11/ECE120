0011 0000 0000 0000 ;x3000 starting part of program
0101 000 000 1 00000 ;Clear R0
0101 001 001 1 00000 ;Clear R1
0010 011 000000001 ; Load in R3 for JSR
0100 1 00000000001 ; JSR allows for the line to be skipped
0011 0001 0000 0000 ; 3100 is loaded
0101 100 100 1 00000 ; Clearing R4
0001 100 100 1 01010 ; Add 10 to R1
0110 101 011 000000 ; LDR R3 into R5
0000 110 000000001 ; BR to see if value is +
0001 000 000 000 101 ; R0 = R0 + R5
0001 011 011 1 00001 ; R3+ R1 -> 3
0001 100 100 1 11111 ; R4 = R4 -1
0000 001 111111010; Determining offset of branch after it is complete
0010 110 000000001; Load R6 into JSN
0100 1 00000000001; JSR skips to the next line
0100 0000 0000 0000 ; x4000 is loaded into R3
0010 011 000000001; ST R3 in x4000
0100 1 00000000001; JSR skips next line
0100 0000 0000 0000 ;x4000
0111 000 011 000000 ; END

0010 011 000000001 ; Load R3 in for JSR
0100 1 00000000001 ; JSR skips to next line
0011 0010 0000 0000 ; x3200 is loaded

0110 101 011 000000 ; LDR R3 into R5
0000 011 000000001 ; BR to see if negative
0001 001 001 000 101 ;Adding R1 and R5 and storing inR1
0001 011 011 1 00001 ; R3 is incremented by 1
0001 101 101 1 00001 ;R5 is incremented by 1
0000 101 111111010 ; Count PC
0001 001 001 1 00001 ; add back 1 into R1

0010 001 000000001 ; ST R3 in x4001
0100 1 00000000001 ; JSR skips to the next line
0100 0000 0000 0001 ; 4001
0111 001 011 000000 ; 
1111 0000 0010 0101 ; HALT
















;OLD PROGRAM FROM BOOK FOR HELP
;0011 0000 0000 0000  ; x3000 - starting address of the program
;0101 001 001 1 00000 ; x3001 R1 <-- R1 AND 0
;0101 010 010 1 00000 ; x3002 R2 <-- R2 AND 0
;0101 011 011 1 00000 ; x3003 R3 <-- R3 AND 0
;0101 100 100 1 00000 ; x3004 R4 <-- R4 AND 0
;0101 101 101 1 00000 ; x3005 R5 <-- R5 AND 0
;0010 001 000001010   ; x3006 R1 <-- M[PC + 10]
;0001 100 100 1 01010 ; x3007 R4 <-- R4 + 10
;0110 010 001 000000  ; x3008 LDR R2 <-- M[R1 +000000]




